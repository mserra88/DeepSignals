@page "/"
@using Microsoft.AspNetCore.Components.Web
@inject IHttpContextAccessor IHttpContextAccessor
@namespace DeepSignals.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="DeepSignals.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="Server" />
</head>
<body>

    <component type="typeof(App)" render-mode="Server" param-Session=@DeepSignals.Settings.Helpers.HttpContextHelper.GetSession(IHttpContextAccessor) />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    
    <script src="_framework/blazor.server.js"></script>

</body>
</html>


















    <!--
    <div id="reconnect-modal" style="display: none;"></div>
    <script src="_framework/blazor.server.js" autostart="false"></script>            
    <script src="./boot.js"></script>
    -->

    <!--
    <script src="_framework/blazor.server.js" autostart="false"></script>
    <script>
        Blazor.start({
        configureSignalR: function (builder) {
            let c = builder.build();
            c.serverTimeoutInMilliseconds = 60000;
            builder.build = () => {
            return c;
            };
        }
        });
    </script>
    -->

    <!--
    <script src="_framework/blazor.server.js" autostart="false"></script>
    <script>
        Blazor.start().then(() => {
            Blazor.defaultReconnectionHandler._reconnectCallback = function (d) {
                document.location.reload();
            }
        });
    </script>
    -->

    <!--
    <p>Respuesta API desde Javascript:</p>
    <div id="json-container"></div>
    <script>
        fetch('https://jsonplaceholder.typicode.com/posts')
            .then(response => response.json())
            .then(data => {
                const jsonContainer = document.getElementById('json-container');
                jsonContainer.textContent = JSON.stringify(data);
            })
            .catch(error => console.error(error));
    </script>
    -->